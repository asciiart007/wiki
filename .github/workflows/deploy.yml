name: Deploy VitePress Wiki to Pages

on:
    # 使用 `master` 分支作为默认分支，请将其更改为 `master`
    push:
        branches: [master]

    # 允许你从 Actions 选项卡手动运行此工作流程
    workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
    group: pages
    # 取消首个工作流的运行，这样在并发时就只会运行最新的
    cancel-in-progress: true

jobs:
    # 构建工作
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
            # - name: Specify working directory
            #   run: cd wiki  # 切换到 wiki 目录录
            - name: 安装 PNPM
              uses: pnpm/action-setup@v3 # 如果使用 pnpm，请取消注释
                # - uses: oven-sh/setup-bun@v1 # 如果使用 Bun，请取消注释
            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: pnpm # 或 pnpm / yarn
            - name: Setup Pages
              uses: actions/configure-pages@v4
            - name: Install dependencies
              run: pnpm install # npm ci 或 pnpm install / yarn install / bun install
            - name: Build with VitePress
              run: pnpm run docs:build # 或 npm docs:build / yarn docs:build / bun run docs:build
            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with: #  路径配置 默认为 ./.vitepress/dist
                path: wiki/.vitepress/dist

    # 部署工作
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        needs: build
        runs-on: ubuntu-latest
        name: Deploy
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
